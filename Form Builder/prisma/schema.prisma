// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  forms     Form[]
  sessions  Session[]
}

model Form {
  id          String      @id @default(uuid())
  title       String
  description String?
  thankYou    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  fields      FormField[]

  @@index([userId])
}

model FormField {
  id          String    @id @default(uuid())
  label       String
  type        String    // text, number, date, radio, checkbox, textarea, select
  required    Boolean   @default(false)
  order       Int
  options     Json?     // For radio, checkbox, select
  validation  Json?     // For text, number, date
  formId      String
  form        Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([formId])
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@index([userId])
  @@index([token])
}
