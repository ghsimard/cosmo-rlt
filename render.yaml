services:
  # Main COSMO application
  - type: web
    name: cosmo-rlt
    env: node
    buildCommand: |
      cd form-docentes && npm install && npm run build && \
      cd ../form-acudientes && npm install && npm run build && \
      cd ../form-estudiantes && npm install && npm run build && \
      cd .. && npm install
    startCommand: node server.js
    envVars:
      - key: DATABASE_URL
        value: postgres://cosmo_rlt_user:Gy5Hs5Hs5Hs5Hs5@dpg-d054t79r0fns73d2loeg-a.oregon-postgres.render.com:5432/cosmo_rlt
      - key: DOCENTES_TOKEN
        value: cosmo-doc-o185zfu2c-5xotms
      - key: ACUDIENTES_TOKEN
        value: cosmo-acu-js4n5cy8ar-f0uax8
      - key: ESTUDIANTES_TOKEN
        value: cosmo-est-o7lmi20mfwb-o9f06j
      - key: NODE_ENV
        value: production
    healthCheckPath: /test
    autoDeploy: true
    routes:
      - type: rewrite
        source: /docentes/cosmo-doc-o185zfu2c-5xotms/*
        destination: /docentes/cosmo-doc-o185zfu2c-5xotms/*
      - type: rewrite
        source: /acudientes/cosmo-acu-js4n5cy8ar-f0uax8/*
        destination: /acudientes/cosmo-acu-js4n5cy8ar-f0uax8/*
      - type: rewrite
        source: /estudiantes/cosmo-est-o7lmi20mfwb-o9f06j/*
        destination: /estudiantes/cosmo-est-o7lmi20mfwb-o9f06j/*
      - type: rewrite
        source: /api/*
        destination: /api/*
      - type: rewrite
        source: /*
        destination: /index.html

  # PostgreSQL Database
  - type: pserv
    name: cosmo-postgres
    plan: free
    env: docker
    disk:
      name: data
      mountPath: /var/lib/postgresql/data
      sizeGB: 1
    autoDeploy: false

# Global environment variables
envVarGroups:
  - name: common-env
    envVars:
      - key: TZ
        value: America/Bogota 